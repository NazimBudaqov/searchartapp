    # def get(self,request):  # dashboard -> olkeler + iller + sector ve uygun subsector ve indicatorlari getirir
    #     countries_data = Country.objects.values_list('countryName',flat=True).distinct().order_by('countryName')
    #     sectors_data = Sector.objects.values_list('sectorName', flat=True).distinct().order_by('sectorName')
    #     year_data = YearData.objects.values_list('year', flat=True).distinct().order_by('year')
    #     sectors = []
    #     for sector in sectors_data.values():
    #         subsectors = Subsector.objects.filter(sector=sector['id'] if sector['id']!='' else None).values()
    #         subs_list = []
    #         for subsector in subsectors:
    #             indicators = Indicator.objects.filter(subsector = subsector['id'] if subsector['id']!='' else None).values()
    #             subs_list.append({subsector['subSectorName'] : [indicator['indicatorName'] for indicator in indicators]})
    #         sectors.append({sector['sectorName'] : [subsector for subsector in subs_list]})
    #     rank_list = YearData.objects.all().aggregate(min_rank=Min('rank'), max_rank=Max('rank'))
    #     data = {
    #         "countries":countries_data,
    #         "years":year_data,
    #         "sectors":sectors,
    #         'min_rank':rank_list['min_rank'],
    #         'max_rank':rank_list['max_rank']
    #     }
    #     return Response(data)

# diagrams view

# def get_data(self,request,indicator_name,country_name): 
#         #diagram1 -  countries by selected ranks
#         year1 = int(request.GET.get('year1'))
#         ranks = request.GET.get('ranks').split(',')
#         countries_by_rank = []
#         for item in YearData.objects.filter(year=year1,indicator__indicatorName=indicator_name,rank__range=ranks).values():
#             countries_by_rank.append(
#                 {
#                     'country': Country.objects.get(id=item['country_id']).countryName,
#                     'country_code': Country.objects.get(id=item['country_id']).country_code,
#                     'country_code_2': Country.objects.get(id=item['country_id']).country_code_2,
#                     'rank':item['rank'],
#                     'amount':item['amount']
#                     }
#             )
#         countries_by_rank = sorted(countries_by_rank, key=lambda x: x["rank"]) #sort dict values in list by rank

#         #diagram2 - rank difference of selected countries in given years
#         if request.GET.get('year2'):
#             year2 = int(request.GET.get('year2'))
#         else:
#             year2=2019
#         each_country_year_data = []

#         def get_year_data_for_country(country):
#             country_code = Country.objects.get(countryName = country).country_code
#             country_code_2 = Country.objects.get(countryName = country).country_code_2
#             try :
#                 rank1 = YearData.objects.get(year = year1,
#                                                 country=Country.objects.get(countryName = country).id,
#                                                 indicator=Indicator.objects.get(indicatorName = indicator_name).id).rank
#                 amount1 = YearData.objects.get(year = year1,
#                                                 country=Country.objects.get(countryName = country).id,
#                                                 indicator=Indicator.objects.get(indicatorName = indicator_name).id).amount
#                 rank2 = YearData.objects.get(year = year2,
#                                                 country=Country.objects.get(countryName = country),
#                                                 indicator=Indicator.objects.get(indicatorName = indicator_name).id).rank
#                 amount2 = YearData.objects.get(year = year2,
#                                                 country=Country.objects.get(countryName = country),
#                                                 indicator=Indicator.objects.get(indicatorName = indicator_name).id).amount
#                 each_country_year_data.append(
#                     {
#                         'country':country,
#                         'country_code':country_code,
#                         'country_code_2':country_code_2,
#                         'first_rank' : rank1,
#                         'first_amount' : amount1,
#                         'second_rank' : rank2,
#                         'second_amount' : amount2,
#                         'rank difference' : (rank2-rank1),
#                         }
#                 )
#                 return each_country_year_data
#             except:
#                 return "there is no data for this query, try change years"
#         for country in country_name.split(','):
#             get_year_data_for_country(country)
        
#         #api3_diaqram_3&4 - get rank and amount data for each year and selected countries
#         def get_data_by_indicator(indicator_name,country_name):
#             countries = country_name.split(',')
#             for country in countries:
#                 if Country.objects.filter(countryName=country):
#                     pass
#                 else:
#                     return Response("there is no such country: {0}".format(country),status=404)
#             data = {
#                 '%s'%country : [
#                     {
#                         'year': entry['year'],
#                         'rank': entry['rank'],
#                         'amount': str(entry['amount'])
#                     }
#                     for entry in YearData.objects.filter(
#                         country__countryName=country,
#                         indicator__indicatorName=indicator_name
#                     ).values('year', 'rank', 'amount')
#                     # '%s'%list(YearData.objects.filter(country__countryName=country,indicator__indicatorName=indicator_name).values('year','rank','amount'))
#                     ] 
#                     for country in countries}
#             return data

#         result = {
#             "diagram_1":countries_by_rank,
#             "diagram_2":{
#                 "indicator" : indicator_name,
#                 "first_year" : year1,
#                 "second_year" : year2,
#                 "countries" : each_country_year_data
#                 },
#             "diagram_3&4":get_data_by_indicator(indicator_name,country_name=country_name),
#             }
#         return Response(result,status=status.HTTP_200_OK)




    # for country in country_name.split(','):
        #     countries_by_rank.append(
        #         {
        #             'country': Country.objects.get(countryName=country).countryName,
        #             'country_code': Country.objects.get(countryName=country).country_code,
        #             'country_code_2': Country.objects.get(countryName=country).country_code_2,
        #             'rank':YearData.objects.get(year=year,indicator__indicatorName=indicator_name,country__countryName=country).rank,
        #             'amount':YearData.objects.get(year=year,indicator__indicatorName=indicator_name,country__countryName=country).amount
        #             }
        #     )
        #     lst.append(YearData.objects.filter(indicator__indicatorName = indicator_name,
        #                                     year__in=YearData.objects.filter(country__countryName = country, 
        #                                                                         indicator__indicatorName = indicator_name)
        #                                                                         .values_list('year'))
        #                                                                         .values_list('amount','year'))
        # amount_list = []
        # year_list = []
        # for queryset in lst:
        #     for value in queryset:
        #         amount_list.append(value[0])
        #         year_list.append(value[1])
        # result = {}
        # countries_by_rank = sorted(countries_by_rank, key=lambda x: x["amount"],reverse=True) #sort values by rank
        



    # def get_diagram_3_4_data(self, ranks, indicator_name, country_name):
    #     countries = country_name.split(',')
    #     lst = []
    #     for country in countries:
    #         if Country.objects.filter(countryName=country) is not None:
    #             lst.append(YearData.objects.filter(country__countryName = country, 
    #                                                      indicator__indicatorName = indicator_name,
    #                                                      year__in=YearData.objects.filter(country__countryName = country, 
    #                                                                                       indicator__indicatorName = indicator_name)
    #                                                                                       .values_list('year'))
    #                                                                                       .values_list('rank','amount','year'))
    #         else:
    #             return Response("there is no such country: {0}".format(country),status=404)
    #     rank_list = []
    #     amount_list = []
    #     year_list = []
    #     for queryset in lst:
    #         for value in queryset:
    #             rank_list.append(value[0])
    #             amount_list.append(value[1])
    #             year_list.append(value[2])
        
    #     data = {'countries_data': 
    #         {'%s'%country : [
    #             {
    #                 'Country':country,
    #                 'Country_code_2':Country.objects.get(countryName=country).country_code_2,
    #                 'Year': entry['year'],
    #                 'Rank': entry['rank'],
    #                 'Amount': str(entry['amount'])
    #             }
    #             for entry in YearData.objects.filter(
    #                 country__countryName=country,
    #                 indicator__indicatorName=indicator_name
    #             ).values('year', 'rank', 'amount')
    #             # '%s'%list(YearData.objects.filter(country__countryName=country,indicator__indicatorName=indicator_name).values('year','rank','amount'))
    #         ]
    #         for country in countries
    #         }
            
    #     }

    #     data['min_rank'] = min(rank_list)
    #     data['max_rank'] = max(rank_list)
    #     data['min_amount'] = min(amount_list)
    #     data['max_amount'] = max(amount_list)
    #     data['year1'] = min(year_list)
    #     data['year2'] = max(year_list)

    #     return data



# 'NAME': 'searchart',
        # 'USER': 'root',
        # 'PASSWORD': 'mysql1234',
        # 'HOST': 'localhost',
        # 'PORT': '3306',